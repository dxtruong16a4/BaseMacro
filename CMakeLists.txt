cmake_minimum_required(VERSION 3.16)

project(BaseMacro VERSION 0.1 LANGUAGES CXX)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(QT NAMES Qt6 Qt5 REQUIRED COMPONENTS Widgets)
find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Widgets)

set(PROJECT_SOURCES
        src/main.cpp
        src/mainwindow.cpp
        src/dialogabout.cpp
        src/configmanager.cpp
        src/threadmanager.cpp
        src/dialoghowtouse.cpp
        src/dialogtips.cpp
        src/settingswindow.cpp
)

set(PROJECT_HEADERS
        include/mainwindow.h
        include/dialogabout.h
        include/configmanager.h
        include/DefaultConstants.h
        include/threadmanager.h
        include/dialoghowtouse.h
        include/dialogtips.h
        include/DialogBase.h
        include/settingswindow.h
)

if(${QT_VERSION_MAJOR} GREATER_EQUAL 6)
    qt_add_executable(BaseMacro
        MANUAL_FINALIZATION
        ${PROJECT_SOURCES}
        ${PROJECT_HEADERS}
        src/mainwindow.ui
        src/dialogabout.ui
        src/dialoghowtouse.ui
        src/dialogtips.ui
        src/settingswindow.ui
    )
else()
    if(ANDROID)
        add_library(BaseMacro SHARED
            ${PROJECT_SOURCES}
            ${PROJECT_HEADERS}
        )
    else()
        add_executable(BaseMacro
            ${PROJECT_SOURCES}
            ${PROJECT_HEADERS}
        )
    endif()
endif()

target_include_directories(BaseMacro PRIVATE include ${Qt${QT_VERSION_MAJOR}Widgets_INCLUDE_DIRS})
target_link_libraries(BaseMacro PRIVATE Qt${QT_VERSION_MAJOR}::Widgets)

if(${QT_VERSION} VERSION_LESS 6.1.0)
  set(BUNDLE_ID_OPTION MACOSX_BUNDLE_GUI_IDENTIFIER com.example.BaseMacro)
endif()
set_target_properties(BaseMacro PROPERTIES
    ${BUNDLE_ID_OPTION}
    MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
    MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
)

include(GNUInstallDirs)
install(TARGETS BaseMacro
    BUNDLE DESTINATION .
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)

if(QT_VERSION_MAJOR EQUAL 6)
    qt_finalize_executable(BaseMacro)
endif()